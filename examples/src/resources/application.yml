# application configuration

application.name: 'composable-example'
info.app:
  version: '4.2.37'
  description: 'Composable application example'
#
# server port for Event API REST endpoint
#
server.port: 8086
#
# log.format = text | compact | json
# text and json are for human readers
# compact is json without pretty print. It is designed for log analytics consumption.
#
log:
  format: text
  level: ${LOG_LEVEL:INFO}
#
# You can add optional health checks that point to your custom health check functions
# (the dependency list is a comma separated list) 
#
health.dependencies: 'demo.health'
#
# To scan libraries for composable functions, use a comma separated text string
# for a list of library dependencies.
#
web.component.scan: 'mercury-composable'
#
# Enable REST automation
#
rest.automation: true
yaml.rest.automation: classpath:/rest.yaml
#
# Event flow configuration
#
yaml.flow.automation: classpath:/flows.yaml
#
# Extension to MIME type mapping for static content
#
# By default, the system supports the following:
# js: application/json
# html: text/html
# htm: text/html
# txt: text/plain
# css: text/css
#
# and the mapping in the mime-types.yml config file in the mercury library resources folder
#
# Any other extensions are served as application/octet-stream
#
# If your application needs specific MIME types, you may add or override them in the 
# optional mime.types section here. See example below.
#
# mime.types:
#   pdf: 'application/pdf'
#   doc: 'application/msword'

#
# for "/env" admin endpoint,
#
# show environment variables or application properties (from application.yml)
# use comma separated list to show more than one
#
show.env.variables: 'PATH'
show.application.properties: 'log.format'
