flow:
  id: 'for-loop-continue'
  description: 'Test the flow of a pipeline task'
  ttl: 20s

first.task: 'sequential.one'

tasks:
  - input:
      - 'input.path_parameter.user -> user'
      - 'input.query.seq -> sequence'
    process: 'sequential.one'
    output:
      - 'result -> model.json'
      - 'int(5) -> model.n'
    description: 'Pass a JSON to another task'
    execution: pipeline
    #
    # 'loop' feature is optional
    #
    # 1. loop.statement is evaluated before the loop
    # 2. loop.condition are evaluated after each function returns from the pipeline
    # 3. The condition is a 'if' statement to evaluate a model value to decide to break or continue
    #
    loop:
      statement: 'for (model.n = 0; model.n < 4; model.n++)'
      condition: 'if (model.continue) continue'
    pipeline:
      - 'echo.one'
      - 'echo.two'
      - 'echo.three'
    next:
      - 'echo.four'

  # you can remove a model key-value by passing a non-exist model. e.g. "model.none"
  - name: 'echo.one'
    input:
      - 'model.n -> n'
      - 'model.json -> data'
      - 'text(echo.1) -> title'
    process: 'decision.case'
    output:
      - 'result.data -> model.json'
    description: 'first step of a pipeline'
    execution: sink

  - name: 'echo.two'
    input:
      - 'model.n -> n'
      - 'model.json -> data'
      - 'text(2) -> continue'
      - 'text(echo.2) -> title'
    process: 'decision.case'
    output:
      - 'result.data -> model.json'
      - 'result.continue -> model.continue'
    description: 'second step of a pipeline'
    execution: sink

  - name: 'echo.three'
    input:
      - 'model.n -> n'
      - 'model.json -> data'
      - 'text(echo.3) -> title'
    process: 'decision.case'
    output:
      - 'result.data -> model.json'
    description: 'third step of a pipeline'
    execution: sink

  - name: 'echo.four'
    input:
      - 'model.n -> n'
      - 'model.json -> data'
    process: 'decision.case'
    output:
      - 'text(application/json) -> output.header.content-type'
      - 'result -> output.body'
      - 'model.none -> model.json'
    description: 'Final step to take result from the pipeline'
    execution: end
